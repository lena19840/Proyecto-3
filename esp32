//*********
// Universidad del Valle de Guatemala
// BE3015 - Electrónica Digital 2

// PROYECTO 2 
//*********

//*********
// LIBRERÍAS
//*********
//sensor
#include <Arduino.h>
#include <Wire.h>
#include "MAX30105.h"
#include "heartRate.h"
#include "spo2_algorithm.h"
MAX30105 sensor;
#include <Adafruit_NeoPixel.h>

//UART
#define rx 16
#define tx 17

//Neopixel
#define PIN 2
Adafruit_NeoPixel strip = Adafruit_NeoPixel(24, PIN, NEO_GRB + NEO_KHZ800);


//*********
//DEFINICIÓN DE PINES
//*********

//*********
// VARIABLES GLOBALES
//*********

//const byte RATE_SIZE = 10; //Increase this for more averaging. 4 is good.
//byte rates[RATE_SIZE]; //Array of heart rates
//byte rateSpot = 0;
//long lastBeat = 0; //Time at which the last beat occurred
//int beatsPerMinute;
//int beatAvg;

#if defined(_AVR_ATmega328P) || defined(AVR_ATmega168_)
//Arduino Uno doesn't have enough SRAM to store 100 samples of IR led data and red led data in 32-bit format
//To solve this problem, 16-bit MSB of the sampled data will be truncated. Samples become 16-bit data.
uint16_t irBuffer[100]; //infrared LED sensor data
uint16_t redBuffer[100];  //red LED sensor data
#else
uint32_t irBuffer[100]; //infrared LED sensor data
uint32_t redBuffer[100];  //red LED sensor data
#endif

int32_t bufferLength; //data length
int32_t spo2; //SPO2 value
int8_t validSPO2; //indicator to show if the SPO2 calculation is valid
int32_t heartRate; //heart rate value
int8_t validHeartRate; //indicator to show if the heart rate calculation is valid

byte pulseLED = 11; //Must be on PWM pin
byte readLED = 13; //Blinks with each data read

//botones de la tiva c
int medicion = 0;

//*********
// PROTOTIPOS DE FUNCIONES
//*********
void valorsensor(void);//función sensor

//*********
// CONFIGURACIÓN
//*********
void setup() {
  //COMUNICACIÓN SERIAL
  Serial.begin(115200);
  Serial2.begin(115200);
  //NEOPIXEL 
  strip.begin();
  strip.setBrightness(30); //adjust brightness here
  strip.show();

  Serial.println("Initializing...");

  // Initialize sensor
  if (!particleSensor.begin(Wire, I2C_SPEED_FAST)) //Use default I2C port, 400kHz speed
  {
    Serial.println(F("MAX30105 was not found. Please check wiring/power."));
    while (1);
  }

  Serial.println(F("Attach sensor to finger with rubber band. Press any key to start conversion"));
  while (Serial.available() == 0) ; //wait until user presses a key
  Serial.read();

  byte ledBrightness = 60; //Options: 0=Off to 255=50mA
  byte sampleAverage = 4; //Options: 1, 2, 4, 8, 16, 32
  byte ledMode = 2; //Options: 1 = Red only, 2 = Red + IR, 3 = Red + IR + Green
  byte sampleRate = 100; //Options: 50, 100, 200, 400, 800, 1000, 1600, 3200
  int pulseWidth = 411; //Options: 69, 118, 215, 411
  int adcRange = 4096; //Options: 2048, 4096, 8192, 16384

  particleSensor.setup(ledBrightness, sampleAverage, ledMode, sampleRate, pulseWidth, adcRange);
}

//*********
// LOOP PRINCIPAL
//*********
void loop() {

  //Tiva c
  if (Serial2.available() > 0) {

    medicion = Serial2.read();
    Serial.print("medir:  ");
    Serial.println(medicion);
    pixels.clear();
    pixels.setPixelColor(0, pixels.Color(0, 150, 0));
    pixels.show(); 

  }

  if (medicion == 1) { //si medir es 1
    valorsensor(); //función del sensor
    Serial2.write(beatAvg); //enviar el valor del promedio a la tiva C
   
  }
 if (medicion ==2){
    pixels.clear();
    pixels.setPixelColor(0, pixels.Color(210, 150, 0));
    pixels.show(); 
 }
}

//*********
//función para el sensor
//*********
void valorsensor() {

  long irValue = sensor.getIR(); //Reading the IR value it will permit us to know if there's a finger on the sensor or not
  //Also detecting a heartbeat

  if (checkForBeat(irValue) == true) //si se detecta un heart beat
  {
    //We sensed a beat!
    long delta = millis() - lastBeat; //measure duration between two beats
    lastBeat = millis();
    beatsPerMinute = 60 / (delta / 1000.0); //calcular bpm

    if (beatsPerMinute < 255 && beatsPerMinute > 20) //para calcular el beatAvg se almacenan 4 datos
    {
      rates[rateSpot++] = (byte)beatsPerMinute; //Store this reading in the array
      rateSpot %= RATE_SIZE; //Wrap variable

      //Take average of readings
      beatAvg = 0;
      for (byte x = 0 ; x < RATE_SIZE ; x++)
        beatAvg += rates[x];
      beatAvg /= RATE_SIZE;
    }
  }

  Serial.print("IR=");
  Serial.print(irValue);
  Serial.print(", BPM=");
  Serial.print(beatsPerMinute);
  Serial.print(", Avg BPM=");
  Serial.println(beatAvg);

  if (irValue < 50000) { //si no se detecta ningún dedo
    Serial.println(" No finger?    "); //indicar que no hay dedo

    //imprimir datos en la pantalla
    Serial.print("IR=");
    Serial.print(irValue);
    Serial.print(", BPM=");
    Serial.print(beatsPerMinute);
    Serial.print(", Avg BPM=");
    Serial.println(beatAvg);
    Serial.println();
  }

}
